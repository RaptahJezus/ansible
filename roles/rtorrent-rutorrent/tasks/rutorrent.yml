---
- name: install prerequisites
  ansible.builtin.apt:
    name:
      - nginx 
      - git
      - python3-pip
      - php7.4-fpm
      - curl
      - ffmpeg
      - mediainfo
      - unrar-free
      - sox
    state: present
    update_cache: yes

- name: install python modules
  ansible.builtin.pip:
    name:
      - passlib>=1.6

- name: "check rutorrent version"
  command: grep -Fq {{rutorrent_version}} /var/www/rutorrent/js/webui.js
  register: rutorrent_ver
  check_mode: no 
  ignore_errors: yes 
  changed_when: no 
  failed_when: no

- name: create rutorrent directory
  ansible.builtin.file:
    path: /var/www/rutorrent
    owner: www-data
    group: www-data
    state: directory
  when: rutorrent_ver.rc != 0

- name: download rutorrent
  ansible.builtin.unarchive:
    remote_src: yes
    src: https://github.com/Novik/ruTorrent/archive/refs/tags/v{{rutorrent_version}}.tar.gz
    dest: /var/www/rutorrent
    owner: www-data
    group: www-data
    extra_opts: [--strip-components=1]
  when: rutorrent_ver.rc != 0

- name: copy rutorrent site-available
  ansible.builtin.template:
    src: rutorrent-site-available.j2
    dest: /etc/nginx/sites-available/rutorrent
    owner: root
    group: root
  notify:
   - restart nginx
   - restart phpfpm
  

- name: link rutorrent site-enabled
  ansible.builtin.file:
    src: /etc/nginx/sites-available/rutorrent
    dest: /etc/nginx/sites-enabled/rutorrent
    state: link
    owner: root
    group: root

- name: create rutorrent web user/password
  community.general.htpasswd:
    path: /etc/nginx/.htpasswd
    name: "{{ vault_rutorrent_web_user }}"
    password: "{{ vault_rutorrent_web_password }}"
    owner: root
    group: www-data
    mode: 0640
  notify:
    - restart nginx

- name: copy rutorrent config
  ansible.builtin.template:
    src: rutorrent-config.php.j2
    dest: /var/www/rutorrent/conf/config.php
    owner: www-data
    group: www-data
  notify:
    - restart nginx
    - restart phpfpm
